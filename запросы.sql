--Создание таблиц
BEGIN;


-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.patients
(
    patient_id serial NOT NULL,
    name text NOT NULL,
    surname text NOT NULL,
    date_of_birth date,
    gender character varying(10) NOT NULL,
    address character varying(100),
    phone_number character varying(20) NOT NULL,
    email character varying(100),
    PRIMARY KEY (patient_id)
);

CREATE TABLE IF NOT EXISTS public.sessions
(
    sessions_id serial NOT NULL,
    start_datetime timestamp with time zone NOT NULL,
    duration interval NOT NULL,
    patient_id bigint NOT NULL,
    specialist_id bigint NOT NULL,
    session_type character varying(50),
    notes text,
    PRIMARY KEY (sessions_id, patient_id, specialist_id)
);

CREATE TABLE IF NOT EXISTS public.specialists
(
    specialist_id serial NOT NULL,
    name character varying(50) NOT NULL,
    surname character varying(50) NOT NULL,
    timetable text,
    contact_info text,
    specialization_name character varying(50) NOT NULL,
    PRIMARY KEY (specialist_id, specialization_name),
    CONSTRAINT uk_specialists_id UNIQUE (specialist_id)
);

CREATE TABLE IF NOT EXISTS public.diagnoses
(
    diagnosis_id serial NOT NULL,
    diagnosis_name character varying(100) NOT NULL,
    description text,
    date_diagnosed date NOT NULL,
    patient_id bigint NOT NULL,
    specialist_id bigint NOT NULL,
    PRIMARY KEY (diagnosis_id, patient_id, specialist_id)
);

CREATE TABLE IF NOT EXISTS public.specializations
(
    specialization_name character varying(50) NOT NULL,
    PRIMARY KEY (specialization_name),
    CONSTRAINT specialization_name UNIQUE (specialization_name)
);

COMMENT ON TABLE public.specializations
    IS 'Служебная таблица, которая хранит специализации';

CREATE TABLE IF NOT EXISTS public.appointments
(
    appointment_id serial NOT NULL,
    appointment_datetime timestamp with time zone NOT NULL,
    notes text,
    specialist_id bigint NOT NULL,
    patient_id bigint NOT NULL,
    status_name character varying(50) NOT NULL,
    PRIMARY KEY (appointment_id, status_name, specialist_id, patient_id)
);

CREATE TABLE IF NOT EXISTS public.appointments_status
(
    status_name character varying(50) NOT NULL,
    PRIMARY KEY (status_name),
    CONSTRAINT status_name UNIQUE (status_name)
);

CREATE TABLE IF NOT EXISTS public.treatment_plans
(
    plan_id serial NOT NULL,
    plan_descriptions text,
    methods text,
    start_date date,
    end_date date,
    patient_id integer NOT NULL,
    specialist_id integer NOT NULL,
    PRIMARY KEY (plan_id, patient_id, specialist_id)
);

CREATE TABLE IF NOT EXISTS public.medicaments
(
    medicament_name character varying(100) NOT NULL,
    dosage character varying(100),
    instruction text,
    PRIMARY KEY (medicament_name)
);

CREATE TABLE IF NOT EXISTS public.medicament_prescriptions
(
    prescription_id serial NOT NULL,
    medicament_name character varying(50) NOT NULL,
    patient_id bigint NOT NULL,
    specialist_id bigint NOT NULL,
    prescription_date date NOT NULL,
    PRIMARY KEY (prescription_id, patient_id, specialist_id, medicament_name)
);

ALTER TABLE IF EXISTS public.sessions
    ADD CONSTRAINT fk_patient FOREIGN KEY (patient_id)
    REFERENCES public.patients (patient_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.sessions
    ADD CONSTRAINT fk_specialist FOREIGN KEY (specialist_id)
    REFERENCES public.specialists (specialist_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.specialists
    ADD FOREIGN KEY (specialization_name)
    REFERENCES public.specializations (specialization_name) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.diagnoses
    ADD CONSTRAINT fk_patient FOREIGN KEY (patient_id)
    REFERENCES public.patients (patient_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.diagnoses
    ADD CONSTRAINT fk_specialist FOREIGN KEY (specialist_id)
    REFERENCES public.specialists (specialist_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.appointments
    ADD CONSTRAINT fk_specialist FOREIGN KEY (specialist_id)
    REFERENCES public.specialists (specialist_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.appointments
    ADD CONSTRAINT fk_patient FOREIGN KEY (patient_id)
    REFERENCES public.patients (patient_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.appointments
    ADD CONSTRAINT fk_status_name FOREIGN KEY (status_name)
    REFERENCES public.appointments_status (status_name) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.treatment_plans
    ADD CONSTRAINT fk_patient FOREIGN KEY (patient_id)
    REFERENCES public.patients (patient_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.treatment_plans
    ADD CONSTRAINT fk_specialist FOREIGN KEY (specialist_id)
    REFERENCES public.specialists (specialist_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.medicament_prescriptions
    ADD CONSTRAINT fk_medicament FOREIGN KEY (medicament_name)
    REFERENCES public.medicaments (medicament_name) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.medicament_prescriptions
    ADD CONSTRAINT fk_patient FOREIGN KEY (patient_id)
    REFERENCES public.patients (patient_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;


ALTER TABLE IF EXISTS public.medicament_prescriptions
    ADD CONSTRAINT fk_specialist FOREIGN KEY (specialist_id)
    REFERENCES public.specialists (specialist_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION
    NOT VALID;

ALTER TABLE public.medicament_prescriptions
ADD COLUMN instruction TEXT;

END;

--======================================================================

--Заполнение таблиц данными 
INSERT INTO public.specializations (specialization_name) VALUES
('Клиническая психология'),
('Детская психология'),
('Психотерапия'),
('Психиатрия');

INSERT INTO public.specialists (name, surname, timetable, contact_info, specialization_name) VALUES
('Лунамор', 'Звездодымов', 'Пн-Пт с 9:00 до 17:00', 'Телефон: 123-456-7890, Эл. почта: lunamor@example.com', 'Клиническая психология'),
('Астрогней', 'Умников', 'Пн-Ср с 10:00 до 18:00', 'Телефон: 987-654-3210, Эл. почта: astrogney@example.com', 'Детская психология'),
('Психотрон', 'Мозголом', 'Вт-Чт с 9:00 до 15:00', 'Телефон: 111-222-3333, Эл. почта: psihotron@example.com', 'Психотерапия'),
('Умноженко', 'Раздолбаев', 'Ср-Пт с 10:00 до 16:00', 'Телефон: 444-555-6666, Эл. почта: umnojenko@example.com', 'Психиатрия');

INSERT INTO public.patients (name, surname, date_of_birth, gender, address, phone_number, email) VALUES
('Алиса', 'Плюшкина', '1995-12-10', 'Женский', 'Улица Сказочная, 5', '111-222-3333', 'alisa@example.com'),
('Борис', 'Шоколадкин', '1988-07-25', 'Мужской', 'Проспект Волшебный, 10', '444-555-6666', 'boris@example.com'),
('Василиса', 'Красавицына', '1992-03-15', 'Женский', 'Улица Чудесная, 15', '777-888-9999', 'vasilisa@example.com'),
('Григорий', 'Волшебников', '1980-05-20', 'Мужской', 'Проспект Фантастический, 20', '123-456-7890', 'grigory@example.com'),
('Дарья', 'Сказочкина', '1985-09-30', 'Женский', 'Улица Феерическая, 25', '987-654-3210', 'darya@example.com');

INSERT INTO public.medicaments (medicament_name, dosage, instruction) VALUES
('Флуоксетин', '20 мг', 'Препарат Флуоксетин используется для лечения депрессии и тревожных расстройств.'),
('Ксанакс', '0.5 мг', 'Препарат Ксанакс применяется для снятия симптомов тревоги и панических атак.'),
('Лоразепам', '1 мг', 'Препарат Лоразепам используется для улучшения качества сна и снятия симптомов тревоги.'),
('Клоназепам', '0.25 мг', 'Препарат Клоназепам применяется для лечения панических атак и снижения тревожности.'),
('Сертралин', '50 мг', 'Препарат Сертралин применяется для лечения депрессии, тревожных и панических расстройств.');

INSERT INTO public.diagnoses (diagnosis_name, description, date_diagnosed, patient_id, specialist_id)
VALUES
('Депрессия', 'Клинический диагноз депрессии.', '2024-05-09', 1, 3),
('Тревожное расстройство', 'Диагноз тревожного расстройства.', '2024-05-09', 2, 4);

INSERT INTO public.appointments_status (status_name)
VALUES
('Запланировано'),
('Подтверждено'),
('Отменено'),
('Выполнено'),
('Просрочено');

INSERT INTO public.appointments (appointment_datetime, notes, specialist_id, patient_id, status_name)
VALUES
('2024-05-16 14:00', 'Первичная консультация', 3, 3, 'Запланировано'),
('2024-05-17 11:00', 'Обследование для выявления проблем', 4, 4, 'Запланировано');

INSERT INTO public.sessions (start_datetime, duration, patient_id, specialist_id, session_type, notes)
VALUES
('2024-05-15 10:00:00', '01:30:00', 1, 3, 'Индивидуальная', 'Сеанс с пациентом, обсуждались проблемы с депрессией и предлагались методы лечения.'),
('2024-05-16 14:00:00', '01:00:00', 3, 3, 'Индивидуальная', 'Проведена первичная консультация, обсудили историю пациента и назначили дальнейшие шаги.'),
('2024-05-17 11:00:00', '01:30:00', 4, 4, 'Индивидуальная', 'Проведено обследование для выявления проблем, пациент далеко не сразу раскрыл свои проблемы, но потом начал активно взаимодействовать.');

INSERT INTO public.treatment_plans (plan_descriptions, methods, start_date, end_date, patient_id, specialist_id)
VALUES
('Использование когнитивно-поведенческой терапии для лечения депрессии', 'Когнитивно-поведенческая терапия (КПТ), фармакотерапия', '2024-05-20', '2024-06-20', 1, 3),
('Психотерапевтические сессии для управления тревожными симптомами', 'Психотерапия, релаксация, фармакотерапия', '2024-05-25', '2024-06-25', 2, 3),
('Индивидуальные консультации для решения семейных проблем', 'Семейная терапия, когнитивно-поведенческая терапия', '2024-06-01', '2024-07-01', 3, 4);

INSERT INTO public.medicament_prescriptions (medicament_name, patient_id, specialist_id, prescription_date, instruction)
VALUES
('Флуоксетин', 1, 3, '2024-05-20', '20 мг 1 раз в день'),
('Ксанакс', 1, 3, '2024-05-20', '0.5 мг по мере необходимости'),
('Лоразепам', 2, 4, '2024-05-25', '1 мг перед сном'),
('Клоназепам', 2, 4, '2024-05-25', '0.25 мг по мере необходимости'),
('Сертралин', 3, 3, '2024-06-01', '50 мг 1 раз в день');

-- Ограничение NOT NULL
ALTER TABLE Patients
    ALTER COLUMN name SET NOT NULL,
    ALTER COLUMN surname SET NOT NULL,
    ALTER COLUMN date_of_birth SET NOT NULL,
    ALTER COLUMN gender SET NOT NULL;

-- Ограничение CHECK для поля "пол"
ALTER TABLE Patients
    ADD CONSTRAINT gender_check CHECK (gender IN ('Мужской', 'Женский'));

-- Значения по умолчанию для номера телефона и электронной почты
ALTER TABLE Patients
    ALTER COLUMN phone_number SET DEFAULT '+7 (000) 000-0000',
    ALTER COLUMN email SET DEFAULT 'example@example.com';

-- Ограничение уникальности для комбинации имени и фамилии
ALTER TABLE Patients
    ADD CONSTRAINT unique_name_surname UNIQUE (name, surname);

-- Правило валидации данных для электронной почты
ALTER TABLE Patients
    ADD CONSTRAINT email_format_check CHECK (email ~* '^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$');

===============================================================================================================

-- Ограничение NOT NULL
ALTER TABLE Specialists
    ALTER COLUMN name SET NOT NULL,
    ALTER COLUMN surname SET NOT NULL;


-- Значение по умолчанию для поля "timetable"
ALTER TABLE Specialists
    ALTER COLUMN timetable SET DEFAULT 'День';

-- Ограничение уникальности для комбинации имени и фамилии
ALTER TABLE Specialists
    ADD CONSTRAINT unique_name_surname UNIQUE (name, surname);

INSERT INTO Patients (name, surname, date_of_birth, gender, address, phone_number, email)
VALUES 
    ('Иван', 'Иванов', '1990-05-15', 'Мужской', 'ул. Пушкина, д. 10, кв. 5', '+7 (123) 456-7890', 'ivanov@example.com'),
    ('Петр', 'Петров', '1985-08-20', 'Мужской', 'ул. Ленина, д. 15, кв. 3', '+7 (234) 567-8901', 'petrov@example.com'),
    ('Анна', 'Сидорова', '1978-11-10', 'Женский', 'ул. Мира, д. 20, кв. 7', '+7 (345) 678-9012', 'sidorova@example.com'),
    ('Елена', 'Козлова', '1995-03-25', 'Женский', 'ул. Советская, д. 25, кв. 9', '+7 (456) 789-0123', 'kozlova@example.com'),
    ('Николай', 'Николаев', '1980-09-03', 'Мужской', 'ул. Кирова, д. 30, кв. 2', '+7 (567) 890-1234', 'nikolaev@example.com'),
    ('Мария', 'Григорьева', '1987-07-12', 'Женский', 'ул. Жукова, д. 35, кв. 4', '+7 (678) 901-2345', 'grigoryeva@example.com'),
    ('Василий', 'Васильев', '1975-12-08', 'Мужской', 'ул. Сталина, д. 40, кв. 6', '+7 (789) 012-3456', 'vasilyev@example.com'),
    ('Ольга', 'Егорова', '1993-04-17', 'Женский', 'ул. Лермонтова, д. 45, кв. 8', '+7 (890) 123-4567', 'egorova@example.com'),
    ('Екатерина', 'Федорова', '1983-06-30', 'Женский', 'ул. Гагарина, д. 50, кв. 1', '+7 (901) 234-5678', 'fedorova@example.com'),
    ('Александр', 'Александров', '1998-01-22', 'Мужской', 'ул. Ломоносова, д. 55, кв. 10', '+7 (012) 345-6789', 'alexandrov@example.com');

INSERT INTO public.specializations (specialization_name)
VALUES 
    ('Психиатрия'),
    ('Психотерапия'),
    ('Психология');
